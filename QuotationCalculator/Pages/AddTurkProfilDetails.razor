@page "/addturkprofil"
@attribute [Authorize(Roles = "Admin")]

@using System.Data

<h3>Add Turk Profile</h3>

<div class="form-group">
    <label for="ProfileCode">Profile Code</label>
    <input type="number" class="form-control" id="ProfileCode" @bind="turkProfil.ProfileCode" step="any" />
</div>
<div class="form-group">
    <label for="ProfileFunction">Profile Function</label>
    <input type="text" class="form-control" id="ProfileFunction" @bind="turkProfil.ProfileFunction" />
</div>
<div class="form-group">
    <label for="WhiteWithoutGasket">White Without Gasket (Rs./Ft)</label>
    <input type="number" class="form-control" id="WhiteWithoutGasket" @bind="turkProfil.WhiteWithoutGasket" step="any" />
</div>
<div class="form-group">
    <label for="WhiteWithGasket">White With Gasket (Rs./Ft)</label>
    <input type="number" class="form-control" id="WhiteWithGasket" @bind="turkProfil.WhiteWithGasket" step="any" />
</div>
<div class="form-group">
    <label for="BlackSolidColor">Black Solid Color (Rs./Ft)</label>
    <input type="number" class="form-control" id="BlackSolidColor" @bind="turkProfil.BlackSolidColor" step="any" />
</div>
<button class="btn btn-primary" @onclick="AddTurkProfil">Add Profil</button>

<button class="btn btn-secondary" @onclick="GoBack">Back</button>

@code {
    private TurkProfilDetails turkProfil = new TurkProfilDetails();
    private List<TurkProfilDetails> allProfils =new List<TurkProfilDetails>();
    private string message = "";


    private async Task AddTurkProfil()
    {
        allProfils = await DalTurkProfilDetails.GetAllTurkProfilDetails();
        if(allProfils.Any(p=>p.ProfileCode==turkProfil.ProfileCode))
        {
            await JSRuntime.InvokeVoidAsync("alert","Record Already Exist");
        }
        else
        {
            var parameters = new SqlParameter[]
        {
            new SqlParameter("@ProfileCode", turkProfil.ProfileCode),
            new SqlParameter("@ProfileFunction",turkProfil.ProfileFunction),
            new SqlParameter("@WhiteWithoutGasket", turkProfil.WhiteWithoutGasket),
            new SqlParameter("@WhiteWithGasket", turkProfil.WhiteWithGasket),
            new SqlParameter("@BlackSolidColor", turkProfil.BlackSolidColor),
        };
            await DalCrud.Manipulate("AddTurkProfilDetails", parameters);
            await JSRuntime.InvokeVoidAsync("alert", "Added successfully");
            turkProfil = new TurkProfilDetails();
        }
        
    }

    private void GoBack()
    {
        NavigationManager.NavigateTo("/turkprofilslist");
    }
}
